// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

type AssignRoleReq struct {
	UserId int64 `json:"user_id" validate:"required"`
	RoleId int64 `json:"role_id" validate:"required"`
}

type CommonRes struct {
	Message string `json:"message"`
	Success bool   `json:"success"`
}

type GetUserRes struct {
	User    UserInfo `json:"user"`
	Message string   `json:"message"`
}

type ListRolesRes struct {
	Roles   []RoleInfo `json:"roles"`
	Message string     `json:"message"`
}

type ListUsersReq struct {
	Page   int    `form:"page,optional,default=1" validate:"min=1"`
	Limit  int    `form:"limit,optional,default=10" validate:"min=1,max=100"`
	Status string `form:"status,optional"`
	Role   string `form:"role,optional"`
}

type ListUsersRes struct {
	Users   []UserInfo `json:"users"`
	Total   int64      `json:"total"`
	Page    int        `json:"page"`
	Limit   int        `json:"limit"`
	Message string     `json:"message"`
}

type LoginReq struct {
	Email    string `json:"email" validate:"required,email"`
	Password string `json:"password" validate:"required"`
}

type LoginRes struct {
	UserId    int64  `json:"user_id"`
	Name      string `json:"name"`
	Email     string `json:"email"`
	Token     string `json:"token"`
	ExpiresAt int64  `json:"expires_at"`
	Message   string `json:"message"`
}

type RegisterReq struct {
	Name     string `json:"name" validate:"required,min=2,max=50"`
	Email    string `json:"email" validate:"required,email"`
	Password string `json:"password" validate:"required,min=6"`
}

type RegisterRes struct {
	UserId  int64  `json:"user_id"`
	Name    string `json:"name"`
	Email   string `json:"email"`
	Token   string `json:"token"`
	Message string `json:"message"`
}

type RoleInfo struct {
	RoleId      int64  `json:"role_id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	CreatedAt   string `json:"created_at"`
}

type UpdateProfileReq struct {
	AvatarUrl   string `json:"avatar_url,optional"`
	Bio         string `json:"bio,optional"`
	Phone       string `json:"phone,optional"`
	Address     string `json:"address,optional"`
	BirthDate   string `json:"birth_date,optional"`
	Gender      string `json:"gender,optional"`
	Occupation  string `json:"occupation,optional"`
	Website     string `json:"website,optional"`
	SocialLinks string `json:"social_links,optional"`
	Preferences string `json:"preferences,optional"`
}

type UpdateUserReq struct {
	Name   string `json:"name,optional"`
	Email  string `json:"email,optional" validate:"email"`
	Status string `json:"status,optional"`
}

type UpdateUserRes struct {
	User    UserInfo `json:"user"`
	Message string   `json:"message"`
}

type UserInfo struct {
	UserId    int64       `json:"user_id"`
	Name      string      `json:"name"`
	Email     string      `json:"email"`
	Status    string      `json:"status"`
	Roles     []string    `json:"roles"`
	Profile   UserProfile `json:"profile,optional"`
	CreatedAt string      `json:"created_at"`
	UpdatedAt string      `json:"updated_at"`
}

type UserProfile struct {
	AvatarUrl   string `json:"avatar_url,optional"`
	Bio         string `json:"bio,optional"`
	Phone       string `json:"phone,optional"`
	Address     string `json:"address,optional"`
	BirthDate   string `json:"birth_date,optional"`
	Gender      string `json:"gender,optional"`
	Occupation  string `json:"occupation,optional"`
	Website     string `json:"website,optional"`
	SocialLinks string `json:"social_links,optional"`
	Preferences string `json:"preferences,optional"`
}
