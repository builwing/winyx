// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

type LoginReq struct {
	Email    string `json:"email" validate:"required,email"`
	Password string `json:"password" validate:"required"`
}

type LoginRes struct {
	AccessToken string `json:"access_token"`
	ExpireTime  int64  `json:"expire_time"`
}

type RegisterReq struct {
	Name     string `json:"name" validate:"required,min=2,max=50"`
	Email    string `json:"email" validate:"required,email"`
	Password string `json:"password" validate:"required,min=6"`
}

type RegisterRes struct {
	Id    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type Request struct {
	Name string `path:"name,optional,default=you"`
}

type Response struct {
	Message string `json:"message"`
}

type UserCreateReq struct {
	Name     string           `json:"name" validate:"required"`
	Email    string           `json:"email" validate:"required,email"`
	Password string           `json:"password" validate:"required,min=6"`
	Status   string           `json:"status,optional"`
	Roles    []string         `json:"roles,optional"`
	Profile  *UserProfileData `json:"profile,optional"`
}

type UserCreateRes struct {
	User UserInfo `json:"user"`
}

type UserDeleteReq struct {
	UserId int64 `path:"id"`
}

type UserDeleteRes struct {
	Message string `json:"message"`
}

type UserDetailReq struct {
	UserId int64 `path:"id"`
}

type UserDetailRes struct {
	User UserInfo `json:"user"`
}

type UserInfo struct {
	UserId    int64            `json:"user_id"`
	Name      string           `json:"name"`
	Email     string           `json:"email"`
	Status    string           `json:"status"`
	Roles     []string         `json:"roles,omitempty"`
	Profile   *UserProfileData `json:"profile,omitempty"`
	CreatedAt string           `json:"created_at"`
	UpdatedAt string           `json:"updated_at"`
}

type UserInfoRes struct {
	Id    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type UserListReq struct {
	Page  int64 `form:"page,optional,default=1"`
	Limit int64 `form:"limit,optional,default=10"`
}

type UserListRes struct {
	Users []UserInfo `json:"users"`
	Total int64      `json:"total"`
	Page  int64      `json:"page"`
	Limit int64      `json:"limit"`
}

type UserProfileData struct {
	Bio         string `json:"bio,optional"`
	Phone       string `json:"phone,optional"`
	Address     string `json:"address,optional"`
	BirthDate   string `json:"birth_date,optional"`
	Gender      string `json:"gender,optional"`
	Occupation  string `json:"occupation,optional"`
	Website     string `json:"website,optional"`
	SocialLinks string `json:"social_links,optional"`
}

type UserUpdateReq struct {
	UserId  int64            `path:"id"`
	Name    string           `json:"name" validate:"required"`
	Email   string           `json:"email" validate:"required,email"`
	Status  string           `json:"status,optional"`
	Roles   []string         `json:"roles,optional"`
	Profile *UserProfileData `json:"profile,optional"`
}

type UserUpdateRes struct {
	User UserInfo `json:"user"`
}
