// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

type ApiStatsReq struct {
	Period      string `json:"period,optional,default=24h"` // 期間（1h/24h/7d/30d）
	ServiceName string `json:"service_name,optional"`       // 特定サービス名（オプション）
}

type ApiStatsRes struct {
	Period          string         `json:"period"`               // 統計期間
	TotalRequests   int64          `json:"total_requests"`       // 総リクエスト数
	SuccessRequests int64          `json:"success_requests"`     // 成功したリクエスト数
	ErrorRequests   int64          `json:"error_requests"`       // エラーリクエスト数
	AvgResponseTime int64          `json:"avg_response_time_ms"` // 平均応答時間
	TopEndpoints    []EndpointStat `json:"top_endpoints"`        // 利用頻度上位エンドポイント
	ErrorBreakdown  []ErrorStat    `json:"error_breakdown"`      // エラー内訳
}

type ConfigRes struct {
	Environment string          `json:"environment"` // 実行環境（dev/staging/prod）
	Version     string          `json:"version"`     // アプリケーションバージョン
	GoVersion   string          `json:"go_version"`  // Goバージョン
	BuildTime   string          `json:"build_time"`  // ビルド日時
	Features    map[string]bool `json:"features"`    // 有効な機能フラグ
	Maintenance MaintenanceInfo `json:"maintenance"` // メンテナンス情報
}

type DatabaseStatus struct {
	Connected    bool   `json:"connected"`          // DB接続状況
	ActiveConn   int    `json:"active_connections"` // アクティブ接続数
	MaxConn      int    `json:"max_connections"`    // 最大接続数
	SlowQueries  int    `json:"slow_queries_24h"`   // 24時間以内の遅いクエリ数
	ResponseTime int64  `json:"response_time_ms"`   // DB応答時間
	Version      string `json:"version,optional"`   // DBバージョン
}

type EndpointStat struct {
	Path            string  `json:"path"`                 // エンドポイントパス
	Method          string  `json:"method"`               // HTTPメソッド
	RequestCount    int64   `json:"request_count"`        // リクエスト数
	AvgResponseTime int64   `json:"avg_response_time_ms"` // 平均応答時間
	ErrorRate       float64 `json:"error_rate"`           // エラー率（％）
}

type ErrorStat struct {
	StatusCode int    `json:"status_code"`      // HTTPステータスコード
	Count      int64  `json:"count"`            // エラー発生回数
	Message    string `json:"message,optional"` // エラーメッセージ
}

type MaintenanceInfo struct {
	Enabled        bool   `json:"enabled"`                  // メンテナンスモード有効/無効
	Message        string `json:"message,optional"`         // メンテナンスメッセージ
	ScheduledStart int64  `json:"scheduled_start,optional"` // 予定開始時刻
	ScheduledEnd   int64  `json:"scheduled_end,optional"`   // 予定終了時刻
}

type MemoryStatus struct {
	UsedMB       int64 `json:"used_mb"`       // 使用メモリ（MB）
	TotalMB      int64 `json:"total_mb"`      // 総メモリ（MB）
	UsagePercent int   `json:"usage_percent"` // 使用率（％）
	Available    int64 `json:"available_mb"`  // 利用可能メモリ（MB）
}

type RealtimeMetricsRes struct {
	CurrentTime    int64   `json:"current_time"`         // 現在時刻
	ActiveSessions int     `json:"active_sessions"`      // アクティブセッション数
	RequestsPerMin int     `json:"requests_per_minute"`  // 毎分のリクエスト数
	CpuUsage       float64 `json:"cpu_usage_percent"`    // CPU使用率
	MemoryUsage    float64 `json:"memory_usage_percent"` // メモリ使用率
	DiskUsage      float64 `json:"disk_usage_percent"`   // ディスク使用率
	NetworkIn      int64   `json:"network_in_bytes"`     // ネットワーク受信バイト数
	NetworkOut     int64   `json:"network_out_bytes"`    // ネットワーク送信バイト数
}

type ServiceStatus struct {
	Name         string `json:"name"`             // サービス名
	Status       string `json:"status"`           // サービス状況（up/down/degraded）
	Port         int    `json:"port,optional"`    // ポート番号
	LastCheck    int64  `json:"last_check"`       // 最後のチェック時刻
	ResponseTime int64  `json:"response_time_ms"` // 応答時間
	ErrorCount   int    `json:"error_count"`      // 24時間以内のエラー数
	Version      string `json:"version,optional"` // サービスバージョン
}

type SystemHealthRes struct {
	Status       string          `json:"status"`           // システムステータス（healthy/unhealthy）
	Timestamp    int64           `json:"timestamp"`        // 確認時のタイムスタンプ
	Services     []ServiceStatus `json:"services"`         // サービス別の状況
	Database     DatabaseStatus  `json:"database"`         // データベース状況
	Memory       MemoryStatus    `json:"memory"`           // メモリ使用状況
	ResponseTime int64           `json:"response_time_ms"` // 応答時間（ミリ秒）
}
